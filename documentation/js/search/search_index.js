var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.629,1,2.16]],["body/modules/AppModule.html",[0,2.008,1,3.763,2,1.193,3,1.193,4,1.449,5,1.449,6,1.193,7,2.662,8,1.449,9,1.859,10,1.859,11,1.859,12,3.04,13,0.03,14,2.77,15,2.77,16,2.201,17,1.449,18,1.309,19,0.24,20,0.214,21,0.214,22,2.215,23,2.983,24,0.756,25,3.364,26,2.215,27,3.364,28,2.215,29,1.859,30,3.364,31,0.795,32,3.364,33,3.583,34,1.449,35,4.068,36,1.624,37,2.215,38,0.503,39,1.859,40,1.309,41,2.215,42,1.624,43,2.983,44,4.068,45,1.859,46,4.543,47,1.354,48,2.215,49,1.859,50,1.859,51,2.215,52,2.467,53,0.737,54,2.201,55,2.215,56,1.859,57,2.215,58,2.201,59,2.215,60,2.215,61,2.201,62,2.215,63,2.215,64,1.859,65,2.215,66,2.215,67,1.205,68,2.215,69,2.215,70,2.215,71,2.215,72,2.215,73,2.215,74,1.41,75,1.193,76,2.215,77,2.215,78,3.364,79,2.215,80,2.215,81,2.215,82,2.215,83,4.885,84,2.215,85,2.215,86,1.859,87,2.215,88,2.215,89,2.215,90,2.215,91,2.215,92,2.215,93,2.215,94,2.215,95,2.215,96,2.215,97,2.215,98,2.215,99,0.795,100,2.215,101,2.215,102,2.215,103,1.449,104,2.215,105,2.215,106,2.215,107,1.449,108,3.332,109,3.812,110,2.215,111,2.215,112,2.215,113,2.215,114,0.929,115,1.859,116,3.364,117,3.364,118,0.24,119,0.027,120,0.015,121,0.015]],["title/classes/AppResolver.html",[54,2.16,119,0.041]],["body/classes/AppResolver.html",[13,0.029,15,3.343,19,0.432,20,0.383,21,0.383,24,0.614,38,0.903,54,3.317,56,3.338,99,1.428,118,0.432,119,0.049,120,0.022,121,0.022,122,1.138,123,3.338,124,0.534,125,2.125,126,4.933,127,1.428,128,3.977,129,1.344,130,3.977,131,1.667,132,2.004,133,0.645,134,1.227,135,1.667,136,3.338,137,4.255,138,3.977,139,1.667,140,1.267,141,3.718,142,3.718,143,2.602,144,2.351,145,3.977]],["title/injectables/AppService.html",[15,1.778,146,1.019]],["body/injectables/AppService.html",[13,0.029,15,2.911,19,0.478,20,0.425,21,0.425,24,0.533,31,1.582,99,1.582,118,0.478,119,0.054,120,0.024,121,0.024,124,0.591,125,2.266,126,5.117,127,2.1,129,1.433,137,3.697,139,1.847,140,1.227,146,1.668,147,2.174,148,3.697,149,4.406,150,4.406,151,4.406]],["title/modules/AuthModule.html",[0,1.629,12,1.951]],["body/modules/AuthModule.html",[0,2.651,2,1.977,3,1.977,4,2.402,5,2.402,6,1.977,7,3.515,8,2.402,12,3.79,13,0.029,14,3.272,16,3.15,17,2.402,18,2.17,19,0.398,20,0.354,21,0.354,23,3.531,24,0.736,31,1.318,64,3.081,118,0.398,119,0.045,120,0.021,121,0.021,152,3.081,153,3.671,154,3.081,155,3.272,156,3.592,157,3.671,158,5.372,159,2.692,160,3.671,161,2.402,162,3.671,163,3.15,164,3.671,165,3.081,166,3.671]],["title/classes/AuthResolver.html",[119,0.041,163,2.16]],["body/classes/AuthResolver.html",[13,0.03,19,0.341,20,0.303,21,0.303,24,0.649,38,0.714,99,1.558,118,0.341,119,0.039,120,0.019,121,0.019,122,0.9,124,0.422,125,1.819,127,1.13,129,1.317,131,2.083,132,1.784,133,0.806,134,1.533,135,1.819,139,1.819,142,3.183,143,2.059,144,1.86,155,3.129,161,3.504,163,2.84,165,2.641,167,2.641,168,3.434,169,4.495,170,2.452,171,3.146,172,3.146,173,2.641,174,2.643,175,3.642,176,3.928,177,3.183,178,3.146,179,3.504,180,3.166,181,2.641,182,2.643,183,3.642,184,2.337,185,3.146,186,2.641,187,4.169,188,3.183,189,3.146,190,2.452,191,2.641,192,3.146,193,3.146,194,2.641,195,3.146]],["title/injectables/AuthService.html",[146,1.019,155,1.778]],["body/injectables/AuthService.html",[13,0.03,19,0.251,20,0.223,21,0.223,24,0.657,31,0.831,33,3.978,34,1.514,74,2.192,75,2.501,99,1.5,118,0.251,119,0.029,120,0.015,121,0.015,124,0.31,125,1.457,127,1.248,129,1.231,131,1.947,132,1.668,133,0.753,134,1.433,139,1.751,144,2.469,146,1.073,147,1.142,155,1.873,159,1.697,168,3.091,169,2.918,170,2.292,173,2.918,174,2.292,177,2.55,179,2.733,180,2.745,181,2.918,182,2.292,183,2.918,184,2.249,190,1.142,191,1.942,196,1.942,197,3.091,198,3.477,199,1.942,200,2.375,201,5.425,202,2.313,203,3.477,204,2.501,205,2.313,206,2.313,207,2.313,208,1.942,209,2.55,210,1.942,211,1.942,212,1.873,213,3.477,214,3.406,215,3.477,216,1.668,217,3.477,218,3.505,219,2.313,220,3.477,221,2.313,222,3.477,223,2.313,224,1.187,225,2.733,226,2.918,227,0.77,228,2.313,229,3.406,230,3.898,231,3.477,232,3.477,233,2.313,234,2.313,235,3.477,236,2.918,237,2.918,238,1.942,239,1.942,240,2.313,241,0.831,242,1.942,243,1.942]],["title/classes/CreateUserInput.html",[119,0.041,244,1.28]],["body/classes/CreateUserInput.html",[13,0.03,19,0.335,20,0.298,21,0.298,24,0.676,38,0.701,47,1.027,53,1.027,67,1.304,114,1.294,118,0.627,119,0.073,120,0.019,121,0.019,122,0.883,140,0.972,216,1.538,224,0.701,227,1.426,241,1.766,244,1.661,245,1.524,246,2.163,247,1.945,248,2.239,249,2.649,250,1.661,251,2.649,252,1.663,253,2.114,254,1.661,255,2.622,256,1.663,257,1.663,258,1.197,259,1.402,260,1.663,261,1.294,262,2.421,263,3.005,264,1.945,265,1.945,266,1.945,267,1.538,268,2.062,269,1.294,270,1.197,271,1.945,272,1.766,273,1.524,274,1.663,275,1.402,276,2.114,277,1.663,278,1.197,279,1.197,280,1.294,281,1.197,282,1.663]],["title/classes/GetUserInput.html",[119,0.041,269,1.384]],["body/classes/GetUserInput.html",[13,0.03,19,0.335,20,0.298,21,0.298,24,0.676,38,0.701,47,1.027,53,1.027,67,1.304,114,1.294,118,0.627,119,0.073,120,0.019,121,0.019,122,0.883,140,0.972,216,1.538,224,0.701,227,1.426,241,1.766,244,1.197,245,1.524,246,2.163,247,1.945,248,2.239,249,2.649,250,1.661,251,2.649,252,1.663,253,2.114,254,1.661,255,2.622,256,1.663,257,1.663,258,1.197,259,1.402,260,1.663,261,1.294,262,2.421,263,3.005,264,1.945,265,1.945,266,1.945,267,1.538,268,2.062,269,1.795,270,1.197,271,1.945,272,1.766,273,1.524,274,1.663,275,1.402,276,2.114,277,1.663,278,1.197,279,1.197,280,1.294,281,1.197,282,1.663]],["title/injectables/GqlAuthGuard.html",[58,2.16,146,1.019]],["body/injectables/GqlAuthGuard.html",[13,0.03,19,0.303,20,0.269,21,0.269,24,0.677,31,1.003,36,2.049,38,0.634,43,2.928,58,2.612,67,1.058,74,2.413,99,2.008,107,2.612,108,2.049,118,0.303,119,0.034,120,0.018,121,0.018,124,0.375,125,1.673,127,1.003,129,1.235,131,1.953,132,1.673,133,0.755,134,1.438,139,1.673,140,1.057,143,1.828,146,1.232,147,1.379,238,2.344,243,2.344,262,1.673,283,4.265,284,2.344,285,3.992,286,3.992,287,3.992,288,2.793,289,5.591,290,2.793,291,3.992,292,4.221,293,2.793,294,3.992,295,2.793,296,2.344,297,2.793,298,2.049,299,2.928,300,2.793,301,2.793,302,2.049,303,2.793,304,2.344,305,3.35,306,2.793,307,3.992,308,3.992,309,2.928,310,2.793,311,2.793,312,3.992,313,2.793,314,3.992,315,2.793,316,2.793,317,2.793,318,2.793,319,2.344,320,3.992,321,2.049,322,2.049,323,2.793,324,2.344,325,2.793,326,2.793]],["title/injectables/GqlThrottlerGuard.html",[61,2.16,146,1.019]],["body/injectables/GqlThrottlerGuard.html",[13,0.03,19,0.423,20,0.376,21,0.376,24,0.669,31,1.399,38,0.884,42,2.857,61,3.274,74,2.097,99,1.399,107,2.549,108,3.67,109,4.199,118,0.423,119,0.048,120,0.022,121,0.022,124,0.523,125,2.097,129,1.033,131,1.633,132,1.399,133,0.632,134,1.202,139,1.633,146,1.544,147,1.923,262,2.097,292,4.278,296,3.27,321,2.857,322,2.857,324,3.27,327,4.199,328,3.27,329,5.528,330,5.004,331,5.004,332,3.896,333,3.896,334,3.896,335,3.896]],["title/interfaces/JwtPayload.html",[204,1.778,336,1.629]],["body/interfaces/JwtPayload.html",[13,0.029,19,0.469,20,0.417,21,0.417,24,0.523,47,1.439,118,0.58,120,0.024,121,0.024,124,0.58,133,0.866,140,1.412,170,2.133,184,2.328,204,2.877,212,2.328,214,4.442,216,2.175,258,1.676,279,2.248,336,2.637,337,2.828,338,3.17,339,1.918]],["title/injectables/JwtStrategy.html",[146,1.019,156,1.951]],["body/injectables/JwtStrategy.html",[13,0.03,19,0.338,20,0.3,21,0.3,24,0.719,31,1.118,33,4.246,34,2.036,74,1.806,75,2.32,99,1.118,103,2.036,118,0.338,119,0.038,120,0.019,121,0.019,124,0.418,125,1.806,127,1.547,129,1.31,131,1.806,132,1.547,133,0.699,134,1.329,139,1.305,144,2.546,146,1.329,147,1.536,156,2.546,161,2.036,168,2.92,177,2.282,180,2.546,197,2.546,200,2.696,204,2.871,208,2.612,210,2.612,211,2.612,218,4.145,224,1.21,225,2.036,226,2.612,229,3.159,230,2.612,239,2.612,241,1.118,242,2.612,262,1.806,298,2.282,304,2.612,340,2.612,341,4.307,342,4.307,343,3.112,344,3.112,345,4.307,346,3.112,347,4.307,348,3.112,349,3.112,350,3.112,351,2.612,352,2.036,353,3.112,354,3.112,355,3.112,356,3.112,357,3.112,358,3.112,359,3.112]],["title/classes/LoginInput.html",[119,0.041,174,1.629]],["body/classes/LoginInput.html",[13,0.03,19,0.382,20,0.34,21,0.34,24,0.638,38,0.8,53,1.173,67,0.934,118,0.571,119,0.069,120,0.021,121,0.021,122,1.008,124,0.473,129,1.243,133,0.76,135,1.964,140,1.467,170,2.313,174,2.313,182,1.739,190,1.739,212,1.898,224,1.274,227,1.752,246,2.377,248,2.041,250,1.817,254,2.176,267,1.891,272,1.265,339,1.683,352,2.306,360,2.306,361,3.933,362,3.524,363,3.524,364,3.672]],["title/classes/LoginResponse.html",[119,0.041,190,1.629]],["body/classes/LoginResponse.html",[13,0.03,19,0.367,20,0.326,21,0.326,24,0.624,38,0.767,53,1.125,67,1.208,118,0.559,119,0.068,120,0.02,121,0.02,122,0.967,124,0.453,129,1.367,133,0.836,134,1.406,135,2.161,140,1.457,170,2.723,174,1.668,182,1.668,190,2.249,212,2.776,224,1.377,227,1.125,246,2.351,248,1.998,250,1.766,254,2.139,267,1.213,272,1.636,339,1.636,352,2.211,360,2.211,364,3.61,365,4.326,366,3.378,367,3.378,368,3.378]],["title/interfaces/PaginateResult.html",[336,1.629,369,2.421]],["body/interfaces/PaginateResult.html",[13,0.029,19,0.345,20,0.307,21,0.307,114,2.256,118,0.345,120,0.019,121,0.019,124,0.427,133,1.031,134,1.927,275,2.444,276,3.287,336,1.57,337,2.082,339,1.57,369,3.207,370,2.67,371,5.381,372,5.381,373,5.381,374,5.381,375,5.381,376,5.381,377,5.381,378,5.381,379,5.381,380,5.381,381,4.997,382,5.828,383,4.891]],["title/classes/PaginateUserInput.html",[119,0.041,270,1.28]],["body/classes/PaginateUserInput.html",[13,0.03,19,0.299,20,0.265,21,0.265,24,0.647,38,0.625,47,0.916,53,0.916,67,1.475,114,1.937,118,0.604,119,0.071,120,0.017,121,0.017,122,0.788,124,0.369,129,1.225,133,0.749,134,1.717,135,1.937,140,1.049,216,1.419,224,0.625,227,1.315,241,1.659,244,1.067,245,1.359,246,2.073,247,1.794,248,2.157,249,2.489,250,1.532,251,2.489,252,1.483,253,1.95,254,1.532,255,2.492,256,1.483,257,1.483,258,1.067,259,1.25,260,1.483,261,1.154,262,2.332,263,2.879,264,1.794,265,1.794,266,1.794,267,1.419,268,1.937,269,1.154,270,1.532,271,1.794,272,1.998,273,2.281,274,1.483,275,2.099,276,2.492,277,1.483,278,1.067,279,1.067,280,1.154,281,1.067,282,1.483,339,1.419,384,2.753,385,2.753,386,2.753,387,2.753,388,2.31,389,2.753]],["title/classes/PaginatedUser.html",[119,0.041,281,1.28]],["body/classes/PaginatedUser.html",[13,0.03,19,0.335,20,0.298,21,0.298,24,0.676,38,0.701,47,1.027,53,1.027,67,1.304,114,1.294,118,0.627,119,0.073,120,0.019,121,0.019,122,0.883,140,0.972,216,1.538,224,0.701,227,1.426,241,1.766,244,1.197,245,1.524,246,2.163,247,1.945,248,2.239,249,2.649,250,1.661,251,2.649,252,1.663,253,2.114,254,1.661,255,2.622,256,1.663,257,1.663,258,1.197,259,1.402,260,1.663,261,1.294,262,2.421,263,3.005,264,1.945,265,1.945,266,1.945,267,1.538,268,2.062,269,1.294,270,1.197,271,1.945,272,1.766,273,1.524,274,1.663,275,1.402,276,2.114,277,1.663,278,1.197,279,1.197,280,1.294,281,1.661,282,1.663]],["title/classes/RefreshTokenInput.html",[119,0.041,182,1.629]],["body/classes/RefreshTokenInput.html",[13,0.03,19,0.395,20,0.351,21,0.351,24,0.647,38,0.825,53,1.21,67,0.964,118,0.58,119,0.07,120,0.021,121,0.021,122,1.04,124,0.488,129,0.964,133,0.59,135,1.524,140,1.464,170,2.804,174,1.795,182,2.361,190,1.795,212,1.958,224,1.289,227,1.21,246,2.395,248,2.073,250,1.855,254,2.203,267,1.306,272,1.306,339,1.718,352,2.379,360,2.379,361,3.052,364,3.717,390,3.636]],["title/classes/SoftDeleteUserInput.html",[119,0.041,280,1.384]],["body/classes/SoftDeleteUserInput.html",[13,0.03,19,0.335,20,0.298,21,0.298,24,0.676,38,0.701,47,1.027,53,1.027,67,1.304,114,1.294,118,0.627,119,0.073,120,0.019,121,0.019,122,0.883,140,0.972,216,1.538,224,0.701,227,1.426,241,1.766,244,1.197,245,1.524,246,2.163,247,1.945,248,2.239,249,2.649,250,1.661,251,2.649,252,1.663,253,2.114,254,1.661,255,2.622,256,1.663,257,1.663,258,1.197,259,1.402,260,1.663,261,1.294,262,2.421,263,3.005,264,1.945,265,1.945,266,1.945,267,1.538,268,2.062,269,1.294,270,1.197,271,1.945,272,1.766,273,1.524,274,1.663,275,1.402,276,2.114,277,1.663,278,1.197,279,1.197,280,1.795,281,1.197,282,1.663]],["title/interfaces/Tokens.html",[184,1.778,336,1.629]],["body/interfaces/Tokens.html",[13,0.029,19,0.469,20,0.417,21,0.417,24,0.523,47,1.439,118,0.58,120,0.024,121,0.024,124,0.58,133,0.866,140,1.458,170,2.989,184,2.877,204,2.328,212,3.262,214,3.17,216,1.552,258,1.676,279,1.676,336,2.637,337,2.828,338,3.17,339,1.918]],["title/classes/UpdateUserInput.html",[119,0.041,278,1.28]],["body/classes/UpdateUserInput.html",[13,0.03,19,0.324,20,0.288,21,0.288,24,0.667,38,0.677,47,0.993,53,0.993,67,1.28,114,1.25,118,0.62,119,0.072,120,0.018,121,0.018,122,0.853,124,0.4,129,0.791,133,0.484,135,1.25,140,0.949,216,1.501,224,0.677,227,1.392,241,1.979,244,1.156,245,1.472,246,2.136,247,1.899,248,2.215,249,2.6,250,1.621,251,2.6,252,1.606,253,2.064,254,1.621,255,2.583,256,1.606,257,1.606,258,1.156,259,1.355,260,1.606,261,1.25,262,2.394,263,2.968,264,1.899,265,1.899,266,1.899,267,1.501,268,2.024,269,1.25,270,1.156,271,1.899,272,1.734,273,1.472,274,1.606,275,1.355,276,2.064,277,1.606,278,1.621,279,1.621,280,1.25,281,1.156,282,1.606,339,1.501,391,2.503,392,2.982]],["title/classes/User.html",[119,0.041,224,0.749]],["body/classes/User.html",[13,0.03,19,0.174,20,0.155,21,0.155,24,0.46,38,0.364,40,0.948,47,0.534,52,3.287,53,0.534,67,1.7,74,0.672,103,2.486,118,0.454,119,0.032,120,0.011,121,0.011,122,0.459,124,0.215,129,1.473,132,0.937,133,0.947,134,1.173,135,2.329,140,1.377,216,1.184,224,0.862,227,1.098,241,1.184,246,2.154,247,1.185,248,0.622,250,1.012,253,1.288,254,2.029,255,1.628,258,0.622,264,1.498,265,1.498,266,1.498,267,1.184,268,2.194,271,1.498,272,1.365,279,1.473,339,0.937,364,2.736,365,2.19,388,2.19,391,1.346,393,0.948,394,3.298,395,3.298,396,3.298,397,3.298,398,1.604,399,5.091,400,1.604,401,1.604,402,2.609,403,2.609,404,5.091,405,1.604,406,1.604,407,5.462,408,3.8,409,1.604,410,2.609,411,4.924,412,3.8,413,4.182,414,3.8,415,1.604,416,2.609,417,4.482,418,1.604,419,1.604,420,1.604,421,1.604,422,1.604,423,3.8,424,2.609,425,3.965,426,2.609,427,2.609,428,2.609,429,1.604,430,1.604,431,1.604,432,1.604,433,3.965,434,2.19,435,1.604,436,1.604,437,1.604,438,1.604,439,1.604,440,5.356,441,2.19,442,1.604,443,2.609,444,2.609,445,2.609,446,2.19,447,1.604,448,1.049,449,2.19,450,2.19,451,1.604,452,2.19,453,2.19,454,2.19,455,1.913,456,2.19,457,1.604,458,1.604,459,1.604,460,2.609,461,2.609,462,1.604,463,1.604,464,1.604,465,1.604,466,1.049,467,1.346]],["title/modules/UserModule.html",[0,1.629,14,1.778]],["body/modules/UserModule.html",[0,2.689,2,2.036,3,2.036,4,2.473,5,2.473,6,2.036,7,3.565,8,3.565,13,0.029,14,3.358,16,3.211,17,2.473,18,2.235,19,0.41,20,0.364,21,0.364,23,2.772,24,0.724,31,1.357,39,3.172,40,2.235,118,0.41,119,0.047,120,0.022,121,0.022,132,1.357,200,2.966,224,0.858,261,1.585,441,3.172,466,3.211,468,3.172,469,3.172,470,3.172,471,3.78,472,3.211,473,3.78,474,3.172,475,3.78,476,3.78]],["title/classes/UserResolver.html",[119,0.041,472,2.16]],["body/classes/UserResolver.html",[13,0.03,19,0.266,20,0.236,21,0.236,24,0.618,31,0.881,38,0.557,67,0.963,74,1.522,75,1.321,99,1.832,118,0.266,119,0.03,120,0.016,121,0.016,122,0.702,124,0.329,125,1.522,127,0.881,129,1.417,131,2.24,132,1.919,133,0.867,134,1.649,135,2.139,136,3.047,139,2.139,141,3.171,142,2.663,143,1.605,144,1.45,168,2.556,175,3.629,179,3.916,180,3.488,186,2.058,187,4.011,194,2.058,199,2.058,200,2.427,224,1.316,225,1.605,229,1.798,241,0.881,244,1.853,261,1.028,269,2.004,270,1.853,272,1.304,278,1.853,280,2.004,281,1.408,472,2.376,474,2.058,477,2.058,478,3.631,479,3.047,480,3.047,481,3.629,482,3.047,483,2.452,484,2.452,485,2.452,486,2.058,487,2.452,488,2.058,489,2.452,490,2.452,491,2.452,492,2.452,493,2.452,494,2.452,495,2.058,496,2.452,497,2.452,498,2.452,499,2.452,500,2.452,501,2.452,502,2.452,503,2.452,504,2.452,505,3.047,506,2.452,507,2.452]],["title/injectables/UserService.html",[146,1.019,200,1.499]],["body/injectables/UserService.html",[13,0.03,19,0.187,20,0.166,21,0.166,24,0.561,31,0.618,40,1.018,47,0.573,67,0.733,74,1.818,75,1.488,99,1.663,114,1.451,115,1.445,118,0.187,119,0.021,120,0.012,121,0.012,124,0.231,125,1.158,127,0.992,129,1.29,131,2.039,132,1.747,133,0.789,134,1.501,139,1.941,140,0.899,141,2.905,146,0.853,147,0.85,168,3.293,179,2.838,180,3.165,197,1.018,200,1.255,209,2.027,216,1.243,224,0.627,225,1.808,227,1.152,236,2.319,237,2.319,241,0.992,244,1.536,247,1.799,258,0.668,261,0.722,264,1.572,265,1.572,266,1.572,267,1.243,268,1.158,270,1.536,271,1.572,273,2.401,275,1.572,278,0.668,279,1.795,281,0.668,425,1.445,448,1.127,455,1.263,479,2.319,480,2.319,481,2.319,482,2.905,486,2.319,488,2.319,495,1.445,505,3.324,508,1.445,509,2.319,510,2.763,511,1.722,512,3.961,513,1.722,514,2.763,515,2.763,516,1.722,517,4.63,518,1.722,519,1.722,520,2.763,521,1.722,522,5.738,523,5.738,524,2.763,525,1.722,526,1.722,527,3.461,528,1.722,529,1.722,530,1.722,531,2.763,532,2.763,533,2.763,534,2.763,535,2.763,536,2.763,537,2.763,538,1.722,539,1.722,540,2.763,541,1.445,542,1.722,543,1.722,544,1.722,545,1.722,546,1.722,547,1.722,548,2.763,549,1.722,550,1.722,551,1.722,552,1.722,553,1.722]],["title/coverage.html",[554,3.289]],["body/coverage.html",[6,1.425,13,0.029,15,1.425,21,0.255,54,1.731,58,1.731,61,1.731,75,1.425,119,0.077,120,0.017,121,0.017,123,2.22,127,0.95,133,0.733,146,1.694,148,2.22,155,1.425,156,1.564,163,1.731,167,2.22,174,1.305,182,1.305,184,1.425,188,1.94,190,1.305,196,2.22,197,1.564,200,1.201,204,1.425,224,0.6,244,1.025,245,2.709,259,1.201,269,1.109,270,1.025,278,1.025,280,1.109,281,1.025,283,2.22,284,2.22,299,1.94,302,1.94,309,1.94,319,5.581,327,2.22,328,2.22,336,2.23,338,2.815,340,2.22,360,2.956,369,1.94,370,2.22,393,2.67,448,1.731,466,1.731,472,1.731,477,2.22,508,2.22,554,1.94,555,2.22,556,2.645,557,2.645,558,5.488,559,4.956,560,2.645,561,4.517,562,2.22,563,2.22,564,5.662,565,2.22,566,6.257,567,3.221,568,3.221,569,3.791,570,2.645,571,2.815,572,3.838,573,2.645,574,2.645,575,3.838,576,2.22,577,2.645,578,2.645,579,2.645,580,2.645,581,2.645]],["title/dependencies.html",[3,2.135,582,2.322]],["body/dependencies.html",[3,2.049,13,0.03,29,3.194,31,1.366,34,2.49,36,2.791,38,0.864,40,2.25,42,2.791,45,3.194,47,1.819,49,3.194,50,3.194,52,2.791,53,1.64,119,0.061,120,0.022,121,0.022,159,2.791,161,2.49,209,2.791,298,2.791,351,4.136,583,3.805,584,3.805,585,4.928,586,5.466,587,3.805,588,3.805,589,3.805,590,3.805,591,3.805,592,3.805,593,3.805,594,3.805,595,3.805,596,3.805,597,3.805,598,3.805,599,3.194,600,3.805,601,3.805,602,3.805,603,3.805,604,3.805,605,4.928,606,3.805,607,3.805,608,3.805,609,3.805,610,3.805,611,3.805]],["title/miscellaneous/enumerations.html",[612,1.257,613,3.327]],["body/miscellaneous/enumerations.html",[13,0.029,120,0.024,121,0.024,124,0.598,268,2.282,393,2.635,433,4.569,449,4.569,450,4.569,452,4.569,453,4.569,454,4.569,455,3.992,456,4.569,612,2.024,613,3.741,614,3.992,615,5.427]],["title/miscellaneous/functions.html",[612,1.257,616,3.327]],["body/miscellaneous/functions.html",[6,3.226,13,0.026,120,0.025,121,0.025,124,0.625,127,2.007,131,1.952,132,1.672,133,0.907,134,1.437,259,2.539,509,3.908,571,3.415,576,3.908,599,3.908,612,2.115,616,3.908,617,4.656,618,3.908,619,4.656,620,4.656,621,4.656,622,4.656,623,4.656]],["title/index.html",[124,0.371,624,2.767,625,2.767]],["body/index.html",[13,0.028,18,3.179,20,0.241,86,2.094,120,0.016,121,0.016,176,1.83,541,2.094,554,1.83,555,3.086,626,2.495,627,2.495,628,4.368,629,3.678,630,2.495,631,2.495,632,2.495,633,2.495,634,3.678,635,4.368,636,2.495,637,2.495,638,2.495,639,4.82,640,2.495,641,4.82,642,5.706,643,2.495,644,5.56,645,2.495,646,2.495,647,2.495,648,3.678,649,2.495,650,3.678,651,2.495,652,4.368,653,2.495,654,3.678,655,2.495,656,2.495,657,2.495,658,2.495,659,2.495,660,4.82,661,5.706,662,5.377,663,2.495,664,3.678,665,2.495,666,2.495,667,2.495,668,2.495,669,2.495,670,5.377,671,3.678,672,4.82,673,2.495,674,3.678,675,2.495,676,2.495,677,3.678,678,5.139,679,4.82,680,2.495,681,3.678,682,2.495,683,2.495,684,2.495,685,2.495,686,4.82,687,2.495,688,2.495,689,2.495,690,2.495,691,2.495,692,3.678,693,2.495,694,2.495,695,2.495,696,2.495,697,2.495,698,3.678,699,2.495,700,2.495,701,2.495,702,3.678,703,2.495,704,2.495,705,4.045,706,3.678,707,2.495,708,2.495,709,2.495,710,2.495,711,2.495,712,2.495,713,2.495,714,2.495,715,3.678,716,2.495,717,2.495,718,2.495,719,2.495,720,4.368,721,2.495,722,2.495,723,2.495,724,2.495,725,2.495,726,2.495,727,3.678,728,2.495,729,2.495,730,2.495,731,2.495,732,2.495,733,3.678,734,2.495,735,2.495,736,2.495,737,3.678,738,3.678,739,2.495,740,2.495,741,2.495,742,2.495,743,2.495,744,2.495,745,2.495,746,2.495,747,2.495,748,2.094,749,2.495,750,2.495,751,2.495,752,2.495,753,2.495,754,2.495,755,2.094]],["title/modules.html",[2,2.415]],["body/modules.html",[1,3.189,2,2.625,12,2.882,13,0.025,14,2.625,120,0.025,121,0.025,705,5.126,756,6.107,757,6.107,758,6.107]],["title/overview.html",[759,3.764]],["body/overview.html",[0,1.916,1,4.159,2,2.091,3,2.091,4,2.54,5,2.54,6,2.091,7,2.54,8,2.54,9,3.259,10,3.259,11,3.259,12,3.796,13,0.028,14,3.379,15,2.972,16,3.267,17,2.54,18,2.295,120,0.022,121,0.022,122,1.111,147,1.916,152,3.259,154,3.259,155,2.972,156,3.262,200,2.85,337,2.54,468,3.259,469,3.259,470,3.259,759,3.259,760,4.993,761,3.883,762,3.883]],["title/properties.html",[339,1.424,582,2.322]],["body/properties.html",[13,0.029,120,0.026,121,0.026,176,3.653,339,1.788,748,4.18,755,4.18,763,4.98,764,4.98,765,4.98]],["title/miscellaneous/typealiases.html",[612,1.257,766,3.964]],["body/miscellaneous/typealiases.html",[13,0.025,120,0.025,121,0.025,124,0.663,127,2.078,133,0.801,393,2.919,446,4.144,448,3.787,571,3.621,612,2.243,614,3.621,618,4.144,767,4.938]],["title/miscellaneous/variables.html",[612,1.257,768,3.327]],["body/miscellaneous/variables.html",[13,0.03,43,2.667,67,1.269,74,2.005,99,1.306,103,2.379,107,2.379,120,0.021,121,0.021,124,0.488,133,0.776,140,1.086,188,3.509,197,2.828,292,2.667,299,3.509,302,3.509,305,3.052,309,3.921,321,2.667,322,2.667,383,3.052,393,2.149,434,5.184,466,3.13,467,3.052,562,3.052,563,4.015,565,4.015,567,3.052,568,4.487,569,3.052,612,1.651,614,2.667,615,5.184,768,3.052,769,3.636,770,5.347,771,4.784,772,3.636,773,3.636,774,3.636,775,3.636,776,3.636,777,4.784,778,3.636]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":319,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["0.0.1",{"_index":764,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":596,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["0.43.1",{"_index":593,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":595,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":570,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":577,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":578,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":579,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":425,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{}}}],["1.8.0",{"_index":598,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":574,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["100",{"_index":573,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":762,"title":{},"body":{"overview.html":{}}}],["13.1.0",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["16.11.0",{"_index":600,"title":{},"body":{"dependencies.html":{}}}],["1]?.length",{"_index":318,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["1d",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["1})@isstring()@isnotempty()@prop({required",{"_index":429,"title":{},"body":{"classes/User.html":{}}}],["2",{"_index":412,"title":{},"body":{"classes/User.html":{}}}],["20",{"_index":414,"title":{},"body":{"classes/User.html":{}}}],["3",{"_index":760,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["4.0.2",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["4.12.2",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":761,"title":{},"body":{"overview.html":{}}}],["6.4.0",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["7.8.1",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["8",{"_index":423,"title":{},"body":{"classes/User.html":{}}}],["8.1.0",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["8.16.3",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/JwtStrategy.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["access_token_secret",{"_index":354,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["accesstoken",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/RefreshTokenInput.html":{},"interfaces/Tokens.html":{}}}],["active",{"_index":452,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["alias",{"_index":575,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":767,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":693,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":742,"title":{},"body":{"index.html":{}}}],["apollo/server",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["apollo/server/plugin/landingpage/default",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriver",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["apollodriverconfig",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserverpluginlandingpagelocaldefault",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["app.resolver",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{}}}],["app_guard",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":662,"title":{},"body":{"index.html":{}}}],["applications",{"_index":634,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appresolver",{"_index":54,"title":{"classes/AppResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"coverage.html":{}}}],["appservice",{"_index":15,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argon2",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["argon2.hash(input.password",{"_index":538,"title":{},"body":{"injectables/UserService.html":{}}}],["argon2.hash(update.password",{"_index":549,"title":{},"body":{"injectables/UserService.html":{}}}],["argon2.verify(user.password",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["args",{"_index":186,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["args('input",{"_index":194,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["assuming",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{}}}],["async",{"_index":168,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["auth.decorator",{"_index":301,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["auth.decorator.ts",{"_index":568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":284,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:14",{"_index":293,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["auth.guard.ts:47",{"_index":295,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["auth.guard.ts:9",{"_index":290,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["auth.resolver",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{}}}],["auth/auth.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["authguard",{"_index":297,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["authguard('jwt",{"_index":285,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["authmodule",{"_index":12,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":748,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authresolver",{"_index":163,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":155,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoschemafile",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["aws",{"_index":681,"title":{},"body":{"index.html":{}}}],["backers",{"_index":743,"title":{},"body":{"index.html":{}}}],["banned",{"_index":454,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["based",{"_index":676,"title":{},"body":{"index.html":{}}}],["before",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["board",{"_index":736,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":382,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":758,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":756,"title":{},"body":{"modules.html":{}}}],["building",{"_index":629,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":286,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["canactivate(context",{"_index":291,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["catch",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{}}}],["channel",{"_index":708,"title":{},"body":{"index.html":{}}}],["check",{"_index":670,"title":{},"body":{"index.html":{}}}],["class",{"_index":119,"title":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{}},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":122,"title":{},"body":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"overview.html":{}}}],["clicks",{"_index":692,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":675,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":468,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":469,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":470,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["come",{"_index":699,"title":{},"body":{"index.html":{}}}],["common/decorators/public.decorator",{"_index":189,"title":{},"body":{"classes/AuthResolver.html":{}}}],["common/guards/gql",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["common/guards/graphq",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["compression",{"_index":597,"title":{},"body":{"dependencies.html":{}}}],["configmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('access_token_secret",{"_index":353,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get('mongo_uri",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":355,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["connected",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('connected",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('disconnected",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('disconnecting",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('open",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.on('reconnected",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(mongoosepaginatev2",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(mongooseuniquevalidator",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":127,"title":{},"body":{"classes/AppResolver.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["constructor(appservice",{"_index":128,"title":{},"body":{"classes/AppResolver.html":{}}}],["constructor(authservice",{"_index":171,"title":{},"body":{"classes/AuthResolver.html":{}}}],["constructor(configservice",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(private",{"_index":143,"title":{},"body":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"injectables/GqlAuthGuard.html":{},"classes/UserResolver.html":{}}}],["constructor(reflector",{"_index":288,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["constructor(usermodel",{"_index":511,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserResolver.html":{}}}],["context",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"miscellaneous/variables.html":{}}}],["context.getclass",{"_index":308,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["context.gethandler",{"_index":307,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":326,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["courses",{"_index":714,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":554,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":509,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["create(input",{"_index":515,"title":{},"body":{"injectables/UserService.html":{}}}],["createdat",{"_index":394,"title":{},"body":{"classes/User.html":{}}}],["createdby",{"_index":395,"title":{},"body":{"classes/User.html":{}}}],["createparamdecorator",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuser",{"_index":478,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuser(@args('input",{"_index":496,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuser(input",{"_index":484,"title":{},"body":{"classes/UserResolver.html":{}}}],["createuserinput",{"_index":244,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["credentials",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["ctx",{"_index":321,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"miscellaneous/variables.html":{}}}],["ctx.getcontext",{"_index":324,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{}}}],["ctx.getcontext().req",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentuser",{"_index":565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":399,"title":{},"body":{"classes/User.html":{}}}],["dbname",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":135,"title":{},"body":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/RefreshTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{}}}],["decorators/optional",{"_index":300,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["decorators/public.decorator",{"_index":303,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["deeper",{"_index":710,"title":{},"body":{"index.html":{}}}],["default",{"_index":434,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":129,"title":{},"body":{"classes/AppResolver.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/RefreshTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":455,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":660,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":680,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":671,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":691,"title":{},"body":{"index.html":{}}}],["description",{"_index":176,"title":{},"body":{"classes/AuthResolver.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":645,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":722,"title":{},"body":{"index.html":{}}}],["disconnected",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["disconnecting",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["discord",{"_index":707,"title":{},"body":{"index.html":{}}}],["dive",{"_index":709,"title":{},"body":{"index.html":{}}}],["docs",{"_index":371,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["documentation",{"_index":555,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["driver",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["dtos/auth.input",{"_index":191,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["dtos/user.input",{"_index":495,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["e2e",{"_index":655,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":630,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":668,"title":{},"body":{"index.html":{}}}],["email",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"interfaces/JwtPayload.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["ensure",{"_index":666,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":726,"title":{},"body":{"index.html":{}}}],["enum",{"_index":417,"title":{},"body":{"classes/User.html":{}}}],["enumerations",{"_index":613,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["example",{"_index":641,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":292,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"miscellaneous/variables.html":{}}}],["expected",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["experience",{"_index":712,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["extends",{"_index":262,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["extractjwt",{"_index":349,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":357,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factory",{"_index":620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["false",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":684,"title":{},"body":{"index.html":{}}}],["features",{"_index":695,"title":{},"body":{"index.html":{}}}],["female",{"_index":450,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["few",{"_index":686,"title":{},"body":{"index.html":{}}}],["field",{"_index":246,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field(undefined",{"_index":365,"title":{},"body":{"classes/LoginResponse.html":{},"classes/User.html":{}}}],["file",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["firstname",{"_index":264,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["focus",{"_index":694,"title":{},"body":{"index.html":{}}}],["follow",{"_index":730,"title":{},"body":{"index.html":{}}}],["found",{"_index":501,"title":{},"body":{"classes/UserResolver.html":{}}}],["framework",{"_index":628,"title":{},"body":{"index.html":{}}}],["full",{"_index":725,"title":{},"body":{"index.html":{}}}],["function",{"_index":572,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":616,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":689,"title":{},"body":{"index.html":{}}}],["gender",{"_index":268,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["get('mongo_uri",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["gethello",{"_index":126,"title":{},"body":{"classes/AppResolver.html":{},"injectables/AppService.html":{}}}],["getrequest",{"_index":287,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":294,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["getrequestresponse",{"_index":330,"title":{},"body":{"injectables/GqlThrottlerGuard.html":{}}}],["getrequestresponse(context",{"_index":331,"title":{},"body":{"injectables/GqlThrottlerGuard.html":{}}}],["getting",{"_index":624,"title":{"index.html":{}},"body":{}}],["gettokens",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokens(input",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["getuser",{"_index":479,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["getuser(@args('input",{"_index":498,"title":{},"body":{"classes/UserResolver.html":{}}}],["getuser(input",{"_index":486,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["getuserinput",{"_index":269,"title":{"classes/GetUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["getusers",{"_index":480,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["getusers(@args('input",{"_index":502,"title":{},"body":{"classes/UserResolver.html":{}}}],["getusers(input",{"_index":488,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["gqlauthguard",{"_index":58,"title":{"injectables/GqlAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["gqlcontext",{"_index":323,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["gqlcontext.req",{"_index":325,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["gqlctx",{"_index":333,"title":{},"body":{"injectables/GqlThrottlerGuard.html":{}}}],["gqlctx.req",{"_index":334,"title":{},"body":{"injectables/GqlThrottlerGuard.html":{}}}],["gqlctx.res",{"_index":335,"title":{},"body":{"injectables/GqlThrottlerGuard.html":{}}}],["gqlexecutioncontext",{"_index":296,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{}}}],["gqlexecutioncontext.create(context",{"_index":322,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"miscellaneous/variables.html":{}}}],["gqlthrottlerguard",{"_index":61,"title":{"injectables/GqlThrottlerGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/GqlThrottlerGuard.html":{},"coverage.html":{}}}],["graph",{"_index":717,"title":{},"body":{"index.html":{}}}],["graphql",{"_index":599,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["graphqlmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["grow",{"_index":739,"title":{},"body":{"index.html":{}}}],["handling",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["hands",{"_index":711,"title":{},"body":{"index.html":{}}}],["handy",{"_index":700,"title":{},"body":{"index.html":{}}}],["hash",{"_index":540,"title":{},"body":{"injectables/UserService.html":{}}}],["hashedpassword",{"_index":537,"title":{},"body":{"injectables/UserService.html":{}}}],["hasnextpage",{"_index":372,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["hasprevpage",{"_index":373,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["hastoken",{"_index":314,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["header",{"_index":312,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["header.split",{"_index":317,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["header.startswith('bearer",{"_index":316,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["hello",{"_index":137,"title":{},"body":{"classes/AppResolver.html":{},"injectables/AppService.html":{}}}],["helmet",{"_index":601,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":715,"title":{},"body":{"index.html":{}}}],["here",{"_index":541,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["https://nestjs.com",{"_index":752,"title":{},"body":{"index.html":{}}}],["hydrateddocument",{"_index":446,"title":{},"body":{"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":247,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["ideally",{"_index":539,"title":{},"body":{"injectables/UserService.html":{}}}],["identifier",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":358,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["inactive",{"_index":453,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["index",{"_index":124,"title":{"index.html":{}},"body":{"classes/AppResolver.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/RefreshTokenInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["information",{"_index":673,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":697,"title":{},"body":{"index.html":{}}}],["inject",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":146,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":147,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":529,"title":{},"body":{"injectables/UserService.html":{}}}],["injectmodel(user.name",{"_index":530,"title":{},"body":{"injectables/UserService.html":{}}}],["input",{"_index":179,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["input.email",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["input.password",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["input.sub",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["input.username",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["inputtype",{"_index":248,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["inputtype('userinput",{"_index":458,"title":{},"body":{"classes/User.html":{}}}],["install",{"_index":688,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":643,"title":{},"body":{"index.html":{}}}],["int",{"_index":249,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["interact",{"_index":718,"title":{},"body":{"index.html":{}}}],["interface",{"_index":336,"title":{"interfaces/JwtPayload.html":{},"interfaces/PaginateResult.html":{},"interfaces/Tokens.html":{}},"body":{"interfaces/JwtPayload.html":{},"interfaces/PaginateResult.html":{},"interfaces/Tokens.html":{},"coverage.html":{}}}],["interfaces",{"_index":337,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/PaginateResult.html":{},"interfaces/Tokens.html":{},"overview.html":{}}}],["interfaces/jwt.interface",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["internalservererrorexception",{"_index":347,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["is_public_key",{"_index":302,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":443,"title":{},"body":{"classes/User.html":{}}}],["isemail()@isnotempty()@field(undefined)@prop({required",{"_index":406,"title":{},"body":{"classes/User.html":{}}}],["isglobal",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":253,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["ismongoid()@isnotempty()@field(undefined",{"_index":391,"title":{},"body":{"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["isnotempty",{"_index":254,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["isnotempty()@field(undefined)@prop({type",{"_index":416,"title":{},"body":{"classes/User.html":{}}}],["isnotempty()@isstring()@field(undefined",{"_index":361,"title":{},"body":{"classes/LoginInput.html":{},"classes/RefreshTokenInput.html":{}}}],["isoptional",{"_index":255,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["isoptional()@field(undefined",{"_index":388,"title":{},"body":{"classes/PaginateUserInput.html":{},"classes/User.html":{}}}],["isphonenumber",{"_index":444,"title":{},"body":{"classes/User.html":{}}}],["isphonenumber()@isnotempty()@field(undefined)@prop({required",{"_index":431,"title":{},"body":{"classes/User.html":{}}}],["ispublic",{"_index":305,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":364,"title":{},"body":{"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/RefreshTokenInput.html":{},"classes/User.html":{}}}],["isstring()@isnotempty()@field(undefined)@prop({required",{"_index":437,"title":{},"body":{"classes/User.html":{}}}],["isstrongpassword",{"_index":445,"title":{},"body":{"classes/User.html":{}}}],["job",{"_index":733,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":735,"title":{},"body":{"index.html":{}}}],["join",{"_index":745,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":356,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":204,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"interfaces/Tokens.html":{},"coverage.html":{}}}],["jwtservice",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":156,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":749,"title":{},"body":{"index.html":{}}}],["key",{"_index":663,"title":{},"body":{"index.html":{}}}],["lastactiveat",{"_index":396,"title":{},"body":{"classes/User.html":{}}}],["lastname",{"_index":265,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["learn",{"_index":703,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["license",{"_index":755,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":738,"title":{},"body":{"index.html":{}}}],["limit",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserService.html":{}}}],["linkedin",{"_index":732,"title":{},"body":{"index.html":{}}}],["logger",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["logger('mongodb",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["logger.log('mongodb",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":169,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["login(@args('input",{"_index":192,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(input",{"_index":173,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["logininput",{"_index":174,"title":{"classes/LoginInput.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/RefreshTokenInput.html":{},"coverage.html":{}}}],["loginresponse",{"_index":190,"title":{"classes/LoginResponse.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/RefreshTokenInput.html":{},"coverage.html":{}}}],["looking",{"_index":674,"title":{},"body":{"index.html":{}}}],["loop",{"_index":728,"title":{},"body":{"index.html":{}}}],["lowercase",{"_index":408,"title":{},"body":{"classes/User.html":{}}}],["makes",{"_index":682,"title":{},"body":{"index.html":{}}}],["male",{"_index":449,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["managing",{"_index":696,"title":{},"body":{"index.html":{}}}],["matching",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":678,"title":{},"body":{"index.html":{}}}],["max",{"_index":256,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["max(100",{"_index":277,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["max(100)@isoptional()@field(undefined",{"_index":384,"title":{},"body":{"classes/PaginateUserInput.html":{}}}],["maxlength",{"_index":413,"title":{},"body":{"classes/User.html":{}}}],["maxlength(20",{"_index":460,"title":{},"body":{"classes/User.html":{}}}],["maxlength(20)@minlength(2)@isstring()@isnotempty()@field(undefined)@prop({required",{"_index":410,"title":{},"body":{"classes/User.html":{}}}],["maxlength(32",{"_index":462,"title":{},"body":{"classes/User.html":{}}}],["maxlength(32)@minlength(8)@isstrongpassword({minlength",{"_index":422,"title":{},"body":{"classes/User.html":{}}}],["message",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":374,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["metadata",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":125,"title":{},"body":{"classes/AppResolver.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["min",{"_index":257,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["min(1",{"_index":274,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["min(1)@isoptional()@field(undefined",{"_index":386,"title":{},"body":{"classes/PaginateUserInput.html":{}}}],["minlength",{"_index":411,"title":{},"body":{"classes/User.html":{}}}],["minlength(2",{"_index":461,"title":{},"body":{"classes/User.html":{}}}],["minlength(8",{"_index":463,"title":{},"body":{"classes/User.html":{}}}],["minlowercase",{"_index":424,"title":{},"body":{"classes/User.html":{}}}],["minnumbers",{"_index":427,"title":{},"body":{"classes/User.html":{}}}],["minsymbols",{"_index":428,"title":{},"body":{"classes/User.html":{}}}],["minuppercase",{"_index":426,"title":{},"body":{"classes/User.html":{}}}],["miscellaneous",{"_index":612,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":737,"title":{},"body":{"index.html":{}}}],["mode",{"_index":648,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"interfaces/JwtPayload.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":475,"title":{},"body":{"modules/UserModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosepaginatev2",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["mongooseuniquevalidator",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":672,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":187,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["mutation(undefined",{"_index":175,"title":{},"body":{"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["myśliwiec",{"_index":750,"title":{},"body":{"index.html":{}}}],["name",{"_index":132,"title":{},"body":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":723,"title":{},"body":{"index.html":{}}}],["nest",{"_index":635,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":754,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":661,"title":{},"body":{"index.html":{}}}],["nestjs/apollo",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":690,"title":{},"body":{"index.html":{}}}],["nestjs/mongoose",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":298,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["nestjs/throttler",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlThrottlerGuard.html":{},"dependencies.html":{}}}],["new",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["nextpage",{"_index":375,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["node.js",{"_index":627,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":494,"title":{},"body":{"classes/UserResolver.html":{}}}],["notfoundexception('user",{"_index":500,"title":{},"body":{"classes/UserResolver.html":{}}}],["npm",{"_index":642,"title":{},"body":{"index.html":{}}}],["null",{"_index":383,"title":{},"body":{"interfaces/PaginateResult.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":272,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{}}}],["number",{"_index":276,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["objecttype",{"_index":250,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["offer",{"_index":734,"title":{},"body":{"index.html":{}}}],["official",{"_index":679,"title":{},"body":{"index.html":{}}}],["offset",{"_index":376,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["omit",{"_index":527,"title":{},"body":{"injectables/UserService.html":{}}}],["onconnectioncreate",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["open",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["optional",{"_index":134,"title":{},"body":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["optional_auth_key",{"_index":299,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["optionalauth",{"_index":309,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["options",{"_index":523,"title":{},"body":{"injectables/UserService.html":{}}}],["out",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":759,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":582,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":275,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserService.html":{}}}],["paginate",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["paginated",{"_index":621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paginatedtype",{"_index":259,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["paginatedtype(tclass",{"_index":619,"title":{},"body":{"miscellaneous/functions.html":{}}}],["paginatedtype(user",{"_index":282,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["paginateduser",{"_index":281,"title":{"classes/PaginatedUser.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["paginatemodel",{"_index":512,"title":{},"body":{"injectables/UserService.html":{}}}],["paginateresult",{"_index":369,"title":{"interfaces/PaginateResult.html":{}},"body":{"interfaces/PaginateResult.html":{},"coverage.html":{}}}],["paginateuserinput",{"_index":270,"title":{"classes/PaginateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["pagingcounter",{"_index":377,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["parameters",{"_index":131,"title":{},"body":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":724,"title":{},"body":{"index.html":{}}}],["partial",{"_index":517,"title":{},"body":{"injectables/UserService.html":{}}}],["partialtype",{"_index":251,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["passport",{"_index":351,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":348,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":267,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["path",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":456,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["phone",{"_index":266,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["picktype",{"_index":252,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["picktype(user",{"_index":263,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["platform",{"_index":677,"title":{},"body":{"index.html":{}}}],["playground",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":706,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["pop",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["possible",{"_index":669,"title":{},"body":{"index.html":{}}}],["prevpage",{"_index":378,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["private",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":650,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":626,"title":{},"body":{"index.html":{}}}],["project",{"_index":639,"title":{},"body":{"index.html":{}}}],["promise",{"_index":180,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["prop",{"_index":440,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":339,"title":{"properties.html":{}},"body":{"interfaces/JwtPayload.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/RefreshTokenInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"properties.html":{}}}],["provide",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["public",{"_index":188,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":141,"title":{},"body":{"classes/AppResolver.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["query(undefined",{"_index":136,"title":{},"body":{"classes/AppResolver.html":{},"classes/UserResolver.html":{}}}],["querybuilder",{"_index":510,"title":{},"body":{"injectables/UserService.html":{}}}],["querybuilder(user",{"_index":520,"title":{},"body":{"injectables/UserService.html":{}}}],["questions",{"_index":704,"title":{},"body":{"index.html":{}}}],["read",{"_index":746,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":144,"title":{},"body":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{}}}],["ready",{"_index":659,"title":{},"body":{"index.html":{}}}],["real",{"_index":719,"title":{},"body":{"index.html":{}}}],["reconnected",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["ref",{"_index":403,"title":{},"body":{"classes/User.html":{}}}],["reflect",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":289,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["refresh",{"_index":183,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":170,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/RefreshTokenInput.html":{},"interfaces/Tokens.html":{}}}],["refreshtoken(input",{"_index":181,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{}}}],["refreshtokeninput",{"_index":182,"title":{"classes/RefreshTokenInput.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/RefreshTokenInput.html":{},"coverage.html":{}}}],["regex",{"_index":522,"title":{},"body":{"injectables/UserService.html":{}}}],["registerenumtype",{"_index":439,"title":{},"body":{"classes/User.html":{}}}],["registerenumtype(gender",{"_index":451,"title":{},"body":{"classes/User.html":{}}}],["registerenumtype(userstatus",{"_index":457,"title":{},"body":{"classes/User.html":{}}}],["repository",{"_index":638,"title":{},"body":{"index.html":{}}}],["req",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{}}}],["req?.headers?.['authorization",{"_index":313,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["request",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request?.user",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":404,"title":{},"body":{"classes/User.html":{}}}],["requiring",{"_index":685,"title":{},"body":{"index.html":{}}}],["res",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"injectables/GqlThrottlerGuard.html":{}}}],["reset",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resolver",{"_index":142,"title":{},"body":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"classes/UserResolver.html":{}}}],["resources",{"_index":698,"title":{},"body":{"index.html":{}}}],["response",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["rest",{"_index":545,"title":{},"body":{"injectables/UserService.html":{}}}],["result",{"_index":622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":139,"title":{},"body":{"classes/AppResolver.html":{},"injectables/AppService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["run",{"_index":644,"title":{},"body":{"index.html":{}}}],["runs",{"_index":667,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":610,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":631,"title":{},"body":{"index.html":{}}}],["schema",{"_index":441,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{}}}],["schema/user.schema",{"_index":261,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["schemafactory",{"_index":442,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":467,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":447,"title":{},"body":{"classes/User.html":{}}}],["schematypes.objectid",{"_index":464,"title":{},"body":{"classes/User.html":{}}}],["search",{"_index":273,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserService.html":{}}}],["secret",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":359,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":632,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(optional_auth_key",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":640,"title":{},"body":{"index.html":{}}}],["side",{"_index":633,"title":{},"body":{"index.html":{}}}],["simple",{"_index":687,"title":{},"body":{"index.html":{}}}],["softdeleteuser",{"_index":481,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["softdeleteuser(id",{"_index":524,"title":{},"body":{"injectables/UserService.html":{}}}],["softdeleteuser(input",{"_index":490,"title":{},"body":{"classes/UserResolver.html":{}}}],["softdeleteuserinput",{"_index":280,"title":{"classes/SoftDeleteUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["sortschema",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["source",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"classes/AppResolver.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"index.html":{}}}],["split",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["sponsors",{"_index":741,"title":{},"body":{"index.html":{}}}],["src/.../current",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../optional",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pagination.ts",{"_index":618,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../public.decorator.ts",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":614,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.resolver.ts",{"_index":123,"title":{},"body":{"classes/AppResolver.html":{},"coverage.html":{}}}],["src/app.resolver.ts:5",{"_index":130,"title":{},"body":{"classes/AppResolver.html":{}}}],["src/app.resolver.ts:9",{"_index":138,"title":{},"body":{"classes/AppResolver.html":{}}}],["src/app.service.ts",{"_index":148,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:4",{"_index":149,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:7",{"_index":150,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.resolver.ts",{"_index":167,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/auth/auth.resolver.ts:12",{"_index":172,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:16",{"_index":178,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.resolver.ts:21",{"_index":185,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/auth/auth.service.ts",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:47",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:63",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dtos/auth.input.ts",{"_index":360,"title":{},"body":{"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/RefreshTokenInput.html":{},"coverage.html":{}}}],["src/auth/dtos/auth.input.ts:10",{"_index":363,"title":{},"body":{"classes/LoginInput.html":{}}}],["src/auth/dtos/auth.input.ts:15",{"_index":362,"title":{},"body":{"classes/LoginInput.html":{}}}],["src/auth/dtos/auth.input.ts:21",{"_index":366,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/auth/dtos/auth.input.ts:24",{"_index":367,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/auth/dtos/auth.input.ts:27",{"_index":368,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/auth/dtos/auth.input.ts:35",{"_index":390,"title":{},"body":{"classes/RefreshTokenInput.html":{}}}],["src/auth/interfaces/jwt.interface.ts",{"_index":338,"title":{},"body":{"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:14",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:32",{"_index":346,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/common/decorators/current",{"_index":562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/optional",{"_index":567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/public.decorator.ts",{"_index":569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/guards/gql",{"_index":283,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"coverage.html":{}}}],["src/common/guards/graphq",{"_index":327,"title":{},"body":{"injectables/GqlThrottlerGuard.html":{},"coverage.html":{}}}],["src/common/interfaces/mongoose.interface.ts",{"_index":370,"title":{},"body":{"interfaces/PaginateResult.html":{},"coverage.html":{}}}],["src/common/objecttypes/pagination",{"_index":260,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["src/common/objecttypes/pagination.ts",{"_index":571,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":576,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/user/dtos/user.input.ts",{"_index":245,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["src/user/dtos/user.input.ts:35",{"_index":389,"title":{},"body":{"classes/PaginateUserInput.html":{}}}],["src/user/dtos/user.input.ts:40",{"_index":387,"title":{},"body":{"classes/PaginateUserInput.html":{}}}],["src/user/dtos/user.input.ts:45",{"_index":385,"title":{},"body":{"classes/PaginateUserInput.html":{}}}],["src/user/dtos/user.input.ts:64",{"_index":392,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["src/user/schema/user.schema.ts",{"_index":393,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/user/schema/user.schema.ts:102",{"_index":430,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:107",{"_index":418,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:112",{"_index":405,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:117",{"_index":420,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:122",{"_index":435,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:125",{"_index":400,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:128",{"_index":436,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:54",{"_index":398,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:62",{"_index":415,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:70",{"_index":421,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:76",{"_index":409,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:82",{"_index":438,"title":{},"body":{"classes/User.html":{}}}],["src/user/schema/user.schema.ts:88",{"_index":432,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.module.ts",{"_index":471,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.resolver.ts",{"_index":477,"title":{},"body":{"classes/UserResolver.html":{},"coverage.html":{}}}],["src/user/user.resolver.ts:15",{"_index":483,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:19",{"_index":485,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:24",{"_index":487,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:33",{"_index":489,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:38",{"_index":493,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.resolver.ts:44",{"_index":491,"title":{},"body":{"classes/UserResolver.html":{}}}],["src/user/user.service.ts",{"_index":508,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:13",{"_index":513,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:18",{"_index":521,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:39",{"_index":516,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:48",{"_index":518,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:53",{"_index":519,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:75",{"_index":528,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:86",{"_index":525,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":646,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":649,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":651,"title":{},"body":{"index.html":{}}}],["started",{"_index":625,"title":{"index.html":{}},"body":{}}],["starter",{"_index":637,"title":{},"body":{"index.html":{}}}],["statements",{"_index":557,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":271,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["stay",{"_index":727,"title":{},"body":{"index.html":{}}}],["steps",{"_index":664,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":683,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":350,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":140,"title":{},"body":{"classes/AppResolver.html":{},"injectables/AppService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"interfaces/JwtPayload.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{}}}],["super",{"_index":304,"title":{},"body":{"injectables/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":320,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["support",{"_index":705,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":757,"title":{},"body":{"modules.html":{}}}],["t",{"_index":381,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["table",{"_index":581,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":580,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":665,"title":{},"body":{"index.html":{}}}],["tclass",{"_index":623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":654,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":657,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":656,"title":{},"body":{"index.html":{}}}],["tests",{"_index":652,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":740,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":145,"title":{},"body":{"classes/AppResolver.html":{}}}],["this.authservice.login(input",{"_index":193,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.refreshtoken(input",{"_index":195,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.configservice.get('access_token_secret",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('refresh_token_secret",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getrequest(context",{"_index":311,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["this.gettokens",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(input.refreshtoken",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.querybuilder(input",{"_index":543,"title":{},"body":{"injectables/UserService.html":{}}}],["this.querybuilder(rest",{"_index":546,"title":{},"body":{"injectables/UserService.html":{}}}],["this.reflector.getallandoverride",{"_index":310,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":306,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["this.usermodel.create",{"_index":542,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidandupdate",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidandupdate(id",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone(query",{"_index":544,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.paginate(query",{"_index":547,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(input",{"_index":497,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.getuser",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.userservice.getuser(input",{"_index":499,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.getusers(input",{"_index":503,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.softdeleteuser(input._id",{"_index":507,"title":{},"body":{"classes/UserResolver.html":{}}}],["this.userservice.updateuser(_id",{"_index":506,"title":{},"body":{"classes/UserResolver.html":{}}}],["throttler.guard",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["throttler.guard.ts",{"_index":328,"title":{},"body":{"injectables/GqlThrottlerGuard.html":{},"coverage.html":{}}}],["throttler.guard.ts:7",{"_index":332,"title":{},"body":{"injectables/GqlThrottlerGuard.html":{}}}],["throttlerguard",{"_index":329,"title":{},"body":{"injectables/GqlThrottlerGuard.html":{}}}],["throttlermodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlers",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/UserResolver.html":{}}}],["time",{"_index":720,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["timestamps",{"_index":459,"title":{},"body":{"classes/User.html":{}}}],["token",{"_index":177,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["tokens",{"_index":184,"title":{"interfaces/Tokens.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"interfaces/Tokens.html":{},"coverage.html":{}}}],["totaldocs",{"_index":379,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["totalpages",{"_index":380,"title":{},"body":{"interfaces/PaginateResult.html":{}}}],["touch",{"_index":747,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":594,"title":{},"body":{"dependencies.html":{}}}],["trim",{"_index":407,"title":{},"body":{"classes/User.html":{}}}],["true",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/GqlAuthGuard.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["true})@prop({required",{"_index":419,"title":{},"body":{"classes/User.html":{}}}],["true})@prop({type",{"_index":401,"title":{},"body":{"classes/User.html":{}}}],["try",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{}}}],["ttl",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["twitter",{"_index":753,"title":{},"body":{"index.html":{}}}],["type",{"_index":133,"title":{},"body":{"classes/AppResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GqlAuthGuard.html":{},"injectables/GqlThrottlerGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"interfaces/PaginateResult.html":{},"classes/PaginateUserInput.html":{},"classes/RefreshTokenInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":766,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":315,"title":{},"body":{"injectables/GqlAuthGuard.html":{}}}],["types",{"_index":258,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"interfaces/JwtPayload.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["types.objectid",{"_index":279,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"interfaces/JwtPayload.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"interfaces/Tokens.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["typescript",{"_index":636,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('invalid",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":402,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"classes/User.html":{},"dependencies.html":{}}}],["unit",{"_index":653,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":765,"title":{},"body":{"properties.html":{}}}],["update",{"_index":505,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["update.password",{"_index":548,"title":{},"body":{"injectables/UserService.html":{}}}],["updatedat",{"_index":397,"title":{},"body":{"classes/User.html":{}}}],["updates",{"_index":729,"title":{},"body":{"index.html":{}}}],["updateuser",{"_index":482,"title":{},"body":{"classes/UserResolver.html":{},"injectables/UserService.html":{}}}],["updateuser(@args('input",{"_index":504,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateuser(id",{"_index":526,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(input",{"_index":492,"title":{},"body":{"classes/UserResolver.html":{}}}],["updateuserinput",{"_index":278,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["uri",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["useclass",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":224,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user._id",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.decorator.ts",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.firstname",{"_index":531,"title":{},"body":{"injectables/UserService.html":{}}}],["user.gender",{"_index":535,"title":{},"body":{"injectables/UserService.html":{}}}],["user.lastname",{"_index":532,"title":{},"body":{"injectables/UserService.html":{}}}],["user.name",{"_index":476,"title":{},"body":{"modules/UserModule.html":{}}}],["user.phone",{"_index":534,"title":{},"body":{"injectables/UserService.html":{}}}],["user.resolver",{"_index":473,"title":{},"body":{"modules/UserModule.html":{}}}],["user.service",{"_index":474,"title":{},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{}}}],["user.status",{"_index":536,"title":{},"body":{"injectables/UserService.html":{}}}],["user.username",{"_index":533,"title":{},"body":{"injectables/UserService.html":{}}}],["user/schema/user.schema",{"_index":352,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/RefreshTokenInput.html":{}}}],["user/user.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["user/user.service",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userdocument",{"_index":448,"title":{},"body":{"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":514,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":14,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["userresolver",{"_index":472,"title":{"classes/UserResolver.html":{}},"body":{"modules/UserModule.html":{},"classes/UserResolver.html":{},"coverage.html":{}}}],["userschema",{"_index":466,"title":{},"body":{"classes/User.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":200,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UserModule.html":{},"classes/UserResolver.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userstatus",{"_index":433,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["userstatus.pending",{"_index":465,"title":{},"body":{"classes/User.html":{}}}],["using",{"_index":721,"title":{},"body":{"index.html":{}}}],["v2",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["valid",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserInput.html":{},"classes/GetUserInput.html":{},"classes/LoginInput.html":{},"classes/LoginResponse.html":{},"classes/PaginateUserInput.html":{},"classes/PaginatedUser.html":{},"classes/RefreshTokenInput.html":{},"classes/SoftDeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"dependencies.html":{}}}],["value",{"_index":615,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":768,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":763,"title":{},"body":{"properties.html":{}}}],["video",{"_index":713,"title":{},"body":{"index.html":{}}}],["visit",{"_index":702,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":716,"title":{},"body":{"index.html":{}}}],["watch",{"_index":647,"title":{},"body":{"index.html":{}}}],["website",{"_index":751,"title":{},"body":{"index.html":{}}}],["working",{"_index":701,"title":{},"body":{"index.html":{}}}],["world",{"_index":151,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":731,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":744,"title":{},"body":{"index.html":{}}}],["you're",{"_index":658,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ApolloServerPluginLandingPageLocalDefault } from '@apollo/server/plugin/landingPage/default';\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\nimport { Logger, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_GUARD } from '@nestjs/core';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { Request, Response } from 'express';\nimport { Connection } from 'mongoose';\nimport * as mongoosePaginateV2 from 'mongoose-paginate-v2';\nimport * as mongooseUniqueValidator from 'mongoose-unique-validator';\nimport { AppResolver } from './app.resolver';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { GqlAuthGuard } from './common/guards/gql-auth.guard';\nimport { GqlThrottlerGuard } from './common/guards/graphq-throttler.guard';\nimport { UserModule } from './user/user.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URI'),\n        onConnectionCreate: (connection: Connection) => {\n          const logger = new Logger('MongoDB', { timestamp: true });\n          const dbName = configService\n            .get('MONGO_URI')\n            ?.split('/')\n            .pop();\n\n          connection.on('connected', () =>\n            logger.log('MongoDB connected to ' + dbName),\n          );\n          connection.on('open', () => logger.log('MongoDB open'));\n          connection.on('disconnected', () =>\n            logger.log('MongoDB disconnected'),\n          );\n          connection.on('reconnected', () => logger.log('MongoDB reconnected'));\n          connection.on('disconnecting', () =>\n            logger.log('MongoDB disconnecting'),\n          );\n\n          connection.plugin(mongoosePaginateV2);\n          connection.plugin(mongooseUniqueValidator, {\n            message: 'Error, expected {PATH} to be unique.',\n          });\n\n          return connection;\n        },\n      }),\n    }),\n    GraphQLModule.forRoot({\n      driver: ApolloDriver,\n      playground: false,\n      autoSchemaFile: true,\n      sortSchema: true,\n      plugins: [ApolloServerPluginLandingPageLocalDefault()],\n      context: ({\n        req,\n        res,\n      }: {\n        req: Request;\n        res: Response;\n      }): { req: Request; res: Response } => ({ req, res }),\n    }),\n    ThrottlerModule.forRoot({\n      throttlers: [\n        {\n          ttl: 60000,\n          limit: 10,\n        },\n      ],\n    }),\n    UserModule,\n    AuthModule,\n  ],\n  providers: [\n    AppService,\n    AppResolver,\n    {\n      provide: APP_GUARD,\n      useClass: GqlThrottlerGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: GqlAuthGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppResolver.html":{"url":"classes/AppResolver.html","title":"class - AppResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/app.resolver.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'hello'})\n                \n            \n\n                    \n                        \n                            Defined in src/app.resolver.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Query, Resolver } from '@nestjs/graphql';\nimport { AppService } from './app.service';\n\n@Resolver()\nexport class AppResolver {\n  constructor(private readonly appService: AppService) {}\n\n  @Query(() => String, { name: 'hello' })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  constructor() {}\n\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt'; // Assuming you have a JwtModule for JWT handling\nimport { UserModule } from '../user/user.module';\nimport { AuthResolver } from './auth.resolver';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\n\n@Module({\n  imports: [JwtModule, UserModule],\n  providers: [AuthResolver, AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    Async\n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.resolver.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(input: LoginInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Login and get JWT token'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.resolver.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            LoginInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(input: RefreshTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {description: 'Refresh JWT tokens'})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.resolver.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            RefreshTokenInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Resolver } from '@nestjs/graphql';\nimport { Public } from '../common/decorators/public.decorator';\nimport { AuthService } from './auth.service';\nimport {\n  LoginInput,\n  LoginResponse,\n  RefreshTokenInput,\n} from './dtos/auth.input';\n\n@Public()\n@Resolver()\nexport class AuthResolver {\n  constructor(private readonly authService: AuthService) {}\n\n  @Mutation(() => LoginResponse, { description: 'Login and get JWT token' })\n  async login(@Args('input') input: LoginInput): Promise {\n    return this.authService.login(input);\n  }\n\n  @Mutation(() => LoginResponse, { description: 'Refresh JWT tokens' })\n  async refreshToken(\n    @Args('input') input: RefreshTokenInput,\n  ): Promise {\n    return this.authService.refreshToken(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getTokens\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTokens(input: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Tokens\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(input: LoginInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            LoginInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(input: RefreshTokenInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            RefreshTokenInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport * as argon2 from 'argon2';\nimport { UserService } from '../user/user.service';\nimport {\n  LoginInput,\n  LoginResponse,\n  RefreshTokenInput,\n} from './dtos/auth.input';\nimport { JwtPayload, Tokens } from './interfaces/jwt.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  private getTokens(input: JwtPayload): Tokens {\n    const accessToken = this.jwtService.sign(\n      {\n        sub: input.sub,\n        email: input.email,\n      },\n      {\n        secret: this.configService.get('ACCESS_TOKEN_SECRET'),\n        expiresIn: '1d',\n      },\n    );\n\n    const refreshToken = this.jwtService.sign(\n      { sub: input.sub, email: input.email },\n      {\n        secret: this.configService.get('REFRESH_TOKEN_SECRET'),\n        expiresIn: '7d',\n      },\n    );\n\n    return {\n      accessToken,\n      refreshToken,\n    };\n  }\n\n  async login(input: LoginInput): Promise {\n    const user = await this.userService.getUser({ username: input.username });\n    if (!user) throw new UnauthorizedException('Invalid credentials');\n\n    const valid = await argon2.verify(user.password, input.password);\n    if (!valid) throw new UnauthorizedException('Invalid credentials');\n\n    return {\n      ...this.getTokens({\n        sub: user._id,\n        email: user.email,\n      }),\n      user,\n    };\n  }\n\n  async refreshToken(input: RefreshTokenInput): Promise {\n    try {\n      const payload = this.jwtService.verify(input.refreshToken, {\n        secret: this.configService.get('REFRESH_TOKEN_SECRET'),\n      });\n      const user = await this.userService.getUser({ _id: payload.sub });\n      if (!user) throw new UnauthorizedException('Invalid refresh token');\n      return {\n        ...this.getTokens({ sub: user._id, email: user.email }),\n        user,\n      };\n    } catch {\n      throw new UnauthorizedException('Invalid refresh token');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user.input.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Field,\n  ID,\n  InputType,\n  Int,\n  ObjectType,\n  PartialType,\n  PickType,\n} from '@nestjs/graphql';\nimport { IsMongoId, IsNotEmpty, IsOptional, Max, Min } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { PaginatedType } from 'src/common/objecttypes/pagination';\nimport { User } from '../schema/user.schema';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, [\n  'firstName',\n  'lastName',\n  'email',\n  'username',\n  'phone',\n  'password',\n  'gender',\n]) {}\n\n@InputType()\nexport class GetUserInput extends PickType(User, ['_id']) {}\n\n@InputType()\nexport class PaginateUserInput extends PartialType(\n  PickType(User, ['gender', 'status']),\n) {\n  @IsOptional()\n  @Field(() => String, { nullable: true })\n  search?: string;\n\n  @Min(1)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  page?: number;\n\n  @Max(100)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  limit?: number;\n}\n\n@InputType()\nexport class UpdateUserInput extends PartialType(\n  PickType(User, [\n    'firstName',\n    'lastName',\n    'email',\n    'username',\n    'phone',\n    'password',\n    'gender',\n    'status',\n  ]),\n) {\n  @IsMongoId()\n  @IsNotEmpty()\n  @Field(() => ID)\n  _id: Types.ObjectId;\n}\n\n@InputType()\nexport class SoftDeleteUserInput extends PickType(User, ['_id']) {}\n\n@ObjectType()\nexport class PaginatedUser extends PaginatedType(User) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserInput.html":{"url":"classes/GetUserInput.html","title":"class - GetUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user.input.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Field,\n  ID,\n  InputType,\n  Int,\n  ObjectType,\n  PartialType,\n  PickType,\n} from '@nestjs/graphql';\nimport { IsMongoId, IsNotEmpty, IsOptional, Max, Min } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { PaginatedType } from 'src/common/objecttypes/pagination';\nimport { User } from '../schema/user.schema';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, [\n  'firstName',\n  'lastName',\n  'email',\n  'username',\n  'phone',\n  'password',\n  'gender',\n]) {}\n\n@InputType()\nexport class GetUserInput extends PickType(User, ['_id']) {}\n\n@InputType()\nexport class PaginateUserInput extends PartialType(\n  PickType(User, ['gender', 'status']),\n) {\n  @IsOptional()\n  @Field(() => String, { nullable: true })\n  search?: string;\n\n  @Min(1)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  page?: number;\n\n  @Max(100)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  limit?: number;\n}\n\n@InputType()\nexport class UpdateUserInput extends PartialType(\n  PickType(User, [\n    'firstName',\n    'lastName',\n    'email',\n    'username',\n    'phone',\n    'password',\n    'gender',\n    'status',\n  ]),\n) {\n  @IsMongoId()\n  @IsNotEmpty()\n  @Field(() => ID)\n  _id: Types.ObjectId;\n}\n\n@InputType()\nexport class SoftDeleteUserInput extends PickType(User, ['_id']) {}\n\n@ObjectType()\nexport class PaginatedUser extends PaginatedType(User) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlAuthGuard.html":{"url":"injectables/GqlAuthGuard.html","title":"injectable - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/gql-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/common/guards/gql-auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/gql-auth.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/gql-auth.guard.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Request\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { AuthGuard } from '@nestjs/passport';\nimport { OPTIONAL_AUTH_KEY } from '../decorators/optional-auth.decorator';\nimport { IS_PUBLIC_KEY } from '../decorators/public.decorator';\n\n@Injectable()\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    const optionalAuth = this.reflector.getAllAndOverride(\n      OPTIONAL_AUTH_KEY,\n      [context.getHandler(), context.getClass()],\n    );\n\n    if (optionalAuth) {\n      const req = this.getRequest(context);\n      const header: string = (req?.headers?.['authorization'] as string) ?? '';\n      const hasToken =\n        typeof header === 'string' &&\n        header.startsWith('Bearer ') &&\n        header.split(' ')[1]?.length > 0;\n\n      if (hasToken) {\n        return super.canActivate(context);\n      }\n\n      return true;\n    }\n\n    if (isPublic) {\n      return true;\n    }\n\n    return super.canActivate(context);\n  }\n\n  getRequest(context: ExecutionContext): Request {\n    try {\n      const ctx = GqlExecutionContext.create(context);\n      const gqlContext = ctx.getContext();\n      return gqlContext.req;\n    } catch {\n      return context.switchToHttp().getRequest();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GqlThrottlerGuard.html":{"url":"injectables/GqlThrottlerGuard.html","title":"injectable - GqlThrottlerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GqlThrottlerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/guards/graphq-throttler.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ThrottlerGuard\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequestResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequestResponse\n                        \n                    \n                \n            \n            \n                \ngetRequestResponse(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/guards/graphq-throttler.guard.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { req: any; res: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { ThrottlerGuard } from '@nestjs/throttler';\n\n@Injectable()\nexport class GqlThrottlerGuard extends ThrottlerGuard {\n  getRequestResponse(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    const gqlCtx = ctx.getContext();\n    return { req: gqlCtx.req, res: gqlCtx.res };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/jwt.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:     Types.ObjectId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.ObjectId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Types } from 'mongoose';\n\nexport interface JwtPayload {\n  sub: Types.ObjectId;\n  email: string;\n}\n\nexport interface Tokens {\n  accessToken: string;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: JwtPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/strategies/jwt.strategy.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            JwtPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  InternalServerErrorException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { User } from '../../user/schema/user.schema';\nimport { UserService } from '../../user/user.service';\nimport { JwtPayload } from '../interfaces/jwt.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userService: UserService,\n  ) {\n    const secret = configService.get('ACCESS_TOKEN_SECRET');\n    if (!secret) {\n      throw new InternalServerErrorException(\n        'ACCESS_TOKEN_SECRET is not defined in configuration',\n      );\n    }\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: secret,\n    });\n  }\n\n  async validate(payload: JwtPayload): Promise {\n    const user = await this.userService.getUser({\n      _id: payload.sub,\n    });\n    if (!user) {\n      throw new UnauthorizedException('Invalid token');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginInput.html":{"url":"classes/LoginInput.html","title":"class - LoginInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { User } from '../../user/schema/user.schema';\n\n@InputType()\nexport class LoginInput {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  password: string;\n}\n\n@ObjectType()\nexport class LoginResponse {\n  @Field(() => String)\n  accessToken: string;\n\n  @Field(() => String)\n  refreshToken: string;\n\n  @Field(() => User, { nullable: true })\n  user?: User;\n}\n\n@InputType()\nexport class RefreshTokenInput {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponse.html":{"url":"classes/LoginResponse.html","title":"class - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                accessToken\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { User } from '../../user/schema/user.schema';\n\n@InputType()\nexport class LoginInput {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  password: string;\n}\n\n@ObjectType()\nexport class LoginResponse {\n  @Field(() => String)\n  accessToken: string;\n\n  @Field(() => String)\n  refreshToken: string;\n\n  @Field(() => User, { nullable: true })\n  user?: User;\n}\n\n@InputType()\nexport class RefreshTokenInput {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginateResult.html":{"url":"interfaces/PaginateResult.html","title":"interface - PaginateResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginateResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/mongoose.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            docs\n                                        \n                                \n                                \n                                        \n                                            hasNextPage\n                                        \n                                \n                                \n                                        \n                                            hasPrevPage\n                                        \n                                \n                                \n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            meta\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            nextPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offset\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pagingCounter\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prevPage\n                                        \n                                \n                                \n                                        \n                                            totalDocs\n                                        \n                                \n                                \n                                        \n                                            totalPages\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        docs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        docs:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasNextPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasNextPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasPrevPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasPrevPage:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nextPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nextPage:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagingCounter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagingCounter:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prevPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prevPage:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalDocs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalDocs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface PaginateResult {\n  docs: T[];\n  totalDocs: number;\n  limit: number;\n  hasPrevPage: boolean;\n  hasNextPage: boolean;\n  page?: number;\n  totalPages: number;\n  offset?: number;\n  prevPage?: number | null;\n  nextPage?: number | null;\n  pagingCounter: number;\n  meta?: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginateUserInput.html":{"url":"classes/PaginateUserInput.html","title":"class - PaginateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Max(100)@IsOptional()@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user.input.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(1)@IsOptional()@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user.input.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user.input.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Field,\n  ID,\n  InputType,\n  Int,\n  ObjectType,\n  PartialType,\n  PickType,\n} from '@nestjs/graphql';\nimport { IsMongoId, IsNotEmpty, IsOptional, Max, Min } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { PaginatedType } from 'src/common/objecttypes/pagination';\nimport { User } from '../schema/user.schema';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, [\n  'firstName',\n  'lastName',\n  'email',\n  'username',\n  'phone',\n  'password',\n  'gender',\n]) {}\n\n@InputType()\nexport class GetUserInput extends PickType(User, ['_id']) {}\n\n@InputType()\nexport class PaginateUserInput extends PartialType(\n  PickType(User, ['gender', 'status']),\n) {\n  @IsOptional()\n  @Field(() => String, { nullable: true })\n  search?: string;\n\n  @Min(1)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  page?: number;\n\n  @Max(100)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  limit?: number;\n}\n\n@InputType()\nexport class UpdateUserInput extends PartialType(\n  PickType(User, [\n    'firstName',\n    'lastName',\n    'email',\n    'username',\n    'phone',\n    'password',\n    'gender',\n    'status',\n  ]),\n) {\n  @IsMongoId()\n  @IsNotEmpty()\n  @Field(() => ID)\n  _id: Types.ObjectId;\n}\n\n@InputType()\nexport class SoftDeleteUserInput extends PickType(User, ['_id']) {}\n\n@ObjectType()\nexport class PaginatedUser extends PaginatedType(User) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedUser.html":{"url":"classes/PaginatedUser.html","title":"class - PaginatedUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user.input.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Field,\n  ID,\n  InputType,\n  Int,\n  ObjectType,\n  PartialType,\n  PickType,\n} from '@nestjs/graphql';\nimport { IsMongoId, IsNotEmpty, IsOptional, Max, Min } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { PaginatedType } from 'src/common/objecttypes/pagination';\nimport { User } from '../schema/user.schema';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, [\n  'firstName',\n  'lastName',\n  'email',\n  'username',\n  'phone',\n  'password',\n  'gender',\n]) {}\n\n@InputType()\nexport class GetUserInput extends PickType(User, ['_id']) {}\n\n@InputType()\nexport class PaginateUserInput extends PartialType(\n  PickType(User, ['gender', 'status']),\n) {\n  @IsOptional()\n  @Field(() => String, { nullable: true })\n  search?: string;\n\n  @Min(1)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  page?: number;\n\n  @Max(100)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  limit?: number;\n}\n\n@InputType()\nexport class UpdateUserInput extends PartialType(\n  PickType(User, [\n    'firstName',\n    'lastName',\n    'email',\n    'username',\n    'phone',\n    'password',\n    'gender',\n    'status',\n  ]),\n) {\n  @IsMongoId()\n  @IsNotEmpty()\n  @Field(() => ID)\n  _id: Types.ObjectId;\n}\n\n@InputType()\nexport class SoftDeleteUserInput extends PickType(User, ['_id']) {}\n\n@ObjectType()\nexport class PaginatedUser extends PaginatedType(User) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenInput.html":{"url":"classes/RefreshTokenInput.html","title":"class - RefreshTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dtos/auth.input.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, ObjectType } from '@nestjs/graphql';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { User } from '../../user/schema/user.schema';\n\n@InputType()\nexport class LoginInput {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  username: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  password: string;\n}\n\n@ObjectType()\nexport class LoginResponse {\n  @Field(() => String)\n  accessToken: string;\n\n  @Field(() => String)\n  refreshToken: string;\n\n  @Field(() => User, { nullable: true })\n  user?: User;\n}\n\n@InputType()\nexport class RefreshTokenInput {\n  @IsNotEmpty()\n  @IsString()\n  @Field(() => String)\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SoftDeleteUserInput.html":{"url":"classes/SoftDeleteUserInput.html","title":"class - SoftDeleteUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SoftDeleteUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user.input.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Field,\n  ID,\n  InputType,\n  Int,\n  ObjectType,\n  PartialType,\n  PickType,\n} from '@nestjs/graphql';\nimport { IsMongoId, IsNotEmpty, IsOptional, Max, Min } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { PaginatedType } from 'src/common/objecttypes/pagination';\nimport { User } from '../schema/user.schema';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, [\n  'firstName',\n  'lastName',\n  'email',\n  'username',\n  'phone',\n  'password',\n  'gender',\n]) {}\n\n@InputType()\nexport class GetUserInput extends PickType(User, ['_id']) {}\n\n@InputType()\nexport class PaginateUserInput extends PartialType(\n  PickType(User, ['gender', 'status']),\n) {\n  @IsOptional()\n  @Field(() => String, { nullable: true })\n  search?: string;\n\n  @Min(1)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  page?: number;\n\n  @Max(100)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  limit?: number;\n}\n\n@InputType()\nexport class UpdateUserInput extends PartialType(\n  PickType(User, [\n    'firstName',\n    'lastName',\n    'email',\n    'username',\n    'phone',\n    'password',\n    'gender',\n    'status',\n  ]),\n) {\n  @IsMongoId()\n  @IsNotEmpty()\n  @Field(() => ID)\n  _id: Types.ObjectId;\n}\n\n@InputType()\nexport class SoftDeleteUserInput extends PickType(User, ['_id']) {}\n\n@ObjectType()\nexport class PaginatedUser extends PaginatedType(User) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tokens.html":{"url":"interfaces/Tokens.html","title":"interface - Tokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Tokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/jwt.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Types } from 'mongoose';\n\nexport interface JwtPayload {\n  sub: Types.ObjectId;\n  email: string;\n}\n\nexport interface Tokens {\n  accessToken: string;\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dtos/user.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dtos/user.input.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Field,\n  ID,\n  InputType,\n  Int,\n  ObjectType,\n  PartialType,\n  PickType,\n} from '@nestjs/graphql';\nimport { IsMongoId, IsNotEmpty, IsOptional, Max, Min } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { PaginatedType } from 'src/common/objecttypes/pagination';\nimport { User } from '../schema/user.schema';\n\n@InputType()\nexport class CreateUserInput extends PickType(User, [\n  'firstName',\n  'lastName',\n  'email',\n  'username',\n  'phone',\n  'password',\n  'gender',\n]) {}\n\n@InputType()\nexport class GetUserInput extends PickType(User, ['_id']) {}\n\n@InputType()\nexport class PaginateUserInput extends PartialType(\n  PickType(User, ['gender', 'status']),\n) {\n  @IsOptional()\n  @Field(() => String, { nullable: true })\n  search?: string;\n\n  @Min(1)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  page?: number;\n\n  @Max(100)\n  @IsOptional()\n  @Field(() => Int, { nullable: true })\n  limit?: number;\n}\n\n@InputType()\nexport class UpdateUserInput extends PartialType(\n  PickType(User, [\n    'firstName',\n    'lastName',\n    'email',\n    'username',\n    'phone',\n    'password',\n    'gender',\n    'status',\n  ]),\n) {\n  @IsMongoId()\n  @IsNotEmpty()\n  @Field(() => ID)\n  _id: Types.ObjectId;\n}\n\n@InputType()\nexport class SoftDeleteUserInput extends PickType(User, ['_id']) {}\n\n@ObjectType()\nexport class PaginatedUser extends PaginatedType(User) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/schema/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                createdBy\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                lastActiveAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsNotEmpty()@Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined, {nullable: true})@Prop({type: undefined, ref: 'User', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()@Field(undefined)@Prop({required: true, unique: true, trim: true, lowercase: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MaxLength(20)@MinLength(2)@IsString()@IsNotEmpty()@Field(undefined)@Prop({required: true, minlength: 2, maxlength: 20, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Gender\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Field(undefined)@Prop({type: String, enum: Gender})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        lastActiveAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@Field(undefined, {nullable: true})@Prop({required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MaxLength(20)@MinLength(2)@IsString()@IsNotEmpty()@Field(undefined)@Prop({required: true, minlength: 2, maxlength: 20, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MaxLength(32)@MinLength(8)@IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1})@IsString()@IsNotEmpty()@Prop({required: true, minlength: 8, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()@IsNotEmpty()@Field(undefined)@Prop({required: true, unique: true, trim: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Field(undefined)@Prop({type: String, enum: UserStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Field(undefined)@Prop({required: true, unique: true, trim: true, lowercase: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/schema/user.schema.ts:82\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Field,\n  ID,\n  InputType,\n  ObjectType,\n  registerEnumType,\n} from '@nestjs/graphql';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport {\n  IsEmail,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  IsStrongPassword,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport { HydratedDocument, SchemaTypes, Types } from 'mongoose';\n\nexport type UserDocument = HydratedDocument;\n\nexport enum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n}\n\nregisterEnumType(Gender, {\n  name: 'Gender',\n});\n\nexport enum UserStatus {\n  ACTIVE = 'ACTIVE',\n  INACTIVE = 'INACTIVE',\n  BANNED = 'BANNED',\n  DELETED = 'DELETED',\n  PENDING = 'PENDING',\n}\n\nregisterEnumType(UserStatus, {\n  name: 'UserStatus',\n});\n\n@InputType('UserInput')\n@ObjectType()\n@Schema({\n  timestamps: true,\n})\nexport class User {\n  @IsMongoId()\n  @IsNotEmpty()\n  @Field(() => ID)\n  _id: Types.ObjectId;\n\n  @MaxLength(20)\n  @MinLength(2)\n  @IsString()\n  @IsNotEmpty()\n  @Field(() => String)\n  @Prop({ required: true, minlength: 2, maxlength: 20, trim: true })\n  firstName: string;\n\n  @MaxLength(20)\n  @MinLength(2)\n  @IsString()\n  @IsNotEmpty()\n  @Field(() => String)\n  @Prop({ required: true, minlength: 2, maxlength: 20, trim: true })\n  lastName: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  @Field(() => String)\n  @Prop({ required: true, unique: true, trim: true, lowercase: true })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @Field(() => String)\n  @Prop({ required: true, unique: true, trim: true, lowercase: true })\n  username: string;\n\n  @IsPhoneNumber()\n  @IsNotEmpty()\n  @Field(() => String)\n  @Prop({ required: true, unique: true, trim: true })\n  phone: string;\n\n  @MaxLength(32)\n  @MinLength(8)\n  @IsStrongPassword({\n    minLength: 8,\n    minLowercase: 1,\n    minUppercase: 1,\n    minNumbers: 1,\n    minSymbols: 1,\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Prop({ required: true, minlength: 8, trim: true })\n  password: string;\n\n  @IsNotEmpty()\n  @Field(() => Gender)\n  @Prop({ type: String, enum: Gender })\n  gender: Gender;\n\n  @IsOptional()\n  @Field(() => String, { nullable: true })\n  @Prop({ type: SchemaTypes.ObjectId, ref: 'User', required: false })\n  createdBy?: Types.ObjectId;\n\n  @IsOptional()\n  @Field(() => Date, { nullable: true })\n  @Prop({ required: false })\n  lastActiveAt?: Date;\n\n  @IsNotEmpty()\n  @Field(() => UserStatus)\n  @Prop({ type: String, enum: UserStatus, default: UserStatus.PENDING })\n  status: UserStatus;\n\n  @Field(() => Date)\n  createdAt: Date;\n\n  @Field(() => Date)\n  updatedAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schema/user.schema';\nimport { UserResolver } from './user.resolver';\nimport { UserService } from './user.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n  ],\n  providers: [UserResolver, UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserResolver.html":{"url":"classes/UserResolver.html","title":"class - UserResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createUser\n                            \n                            \n                                    \n                                    Async\n                                getUser\n                            \n                            \n                                    \n                                getUsers\n                            \n                            \n                                    \n                                softDeleteUser\n                            \n                            \n                                    \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.resolver.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(input: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.resolver.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(input: GetUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.resolver.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            GetUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(input: PaginateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.resolver.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            PaginateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        softDeleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    softDeleteUser(input: SoftDeleteUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.resolver.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            SoftDeleteUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(input: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.resolver.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            UpdateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from '@nestjs/common';\nimport { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport {\n  CreateUserInput,\n  GetUserInput,\n  PaginatedUser,\n  PaginateUserInput,\n  SoftDeleteUserInput,\n  UpdateUserInput,\n} from './dtos/user.input';\nimport { User } from './schema/user.schema';\nimport { UserService } from './user.service';\n\n@Resolver(() => User)\nexport class UserResolver {\n  constructor(private readonly userService: UserService) {}\n\n  @Mutation(() => User)\n  createUser(@Args('input') input: CreateUserInput): Promise {\n    return this.userService.create(input);\n  }\n\n  @Query(() => User, { nullable: true })\n  async getUser(@Args('input') input: GetUserInput): Promise {\n    const user = await this.userService.getUser(input);\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  @Query(() => PaginatedUser)\n  getUsers(@Args('input') input: PaginateUserInput): Promise {\n    return this.userService.getUsers(input);\n  }\n\n  @Mutation(() => User)\n  updateUser(@Args('input') input: UpdateUserInput): Promise {\n    const { _id, ...update } = input;\n    return this.userService.updateUser(_id, update);\n  }\n\n  @Mutation(() => User)\n  softDeleteUser(\n    @Args('input') input: SoftDeleteUserInput,\n  ): Promise {\n    return this.userService.softDeleteUser(input._id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                queryBuilder\n                            \n                            \n                                    Async\n                                softDeleteUser\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: PaginateModel)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        PaginateModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(input: CreateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            CreateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser(input: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(input: PaginateUserInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                            PaginateUserInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryBuilder\n                        \n                    \n                \n            \n            \n                \nqueryBuilder(user: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { status: any; gender: any; phone: { $regex: any; $options: string; }; username: { $regex: any; $options: string; }; email: { $regex: any; $options: string; }; lastName: { $regex: any; $options: string; }; firstName: { ...; }; _id: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        softDeleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    softDeleteUser(id: Types.ObjectId)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: Types.ObjectId, update: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        Types.ObjectId\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                update\n                                            \n                                                        Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport * as argon2 from 'argon2';\nimport { PaginateModel, Types } from 'mongoose';\nimport {\n  CreateUserInput,\n  PaginatedUser,\n  PaginateUserInput,\n  UpdateUserInput,\n} from './dtos/user.input';\nimport { User, UserDocument } from './schema/user.schema';\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectModel(User.name) private userModel: PaginateModel,\n  ) {}\n\n  queryBuilder(user: Partial) {\n    const query = {\n      ...(user._id && { _id: user._id }),\n      ...(user.firstName && {\n        firstName: { $regex: user.firstName, $options: 'i' },\n      }),\n      ...(user.lastName && {\n        lastName: { $regex: user.lastName, $options: 'i' },\n      }),\n      ...(user.email && { email: { $regex: user.email, $options: 'i' } }),\n      ...(user.username && {\n        username: { $regex: user.username, $options: 'i' },\n      }),\n      ...(user.phone && { phone: { $regex: user.phone, $options: 'i' } }),\n      ...(user.gender && { gender: user.gender }),\n      ...(user.status && { status: user.status }),\n    };\n\n    return query;\n  }\n\n  async create(input: CreateUserInput): Promise {\n    const hashedPassword = await argon2.hash(input.password); // Ideally, you should hash the password here\n\n    return this.userModel.create({\n      ...input,\n      password: hashedPassword,\n    });\n  }\n\n  async getUser(input: Partial): Promise {\n    const query = this.queryBuilder(input);\n    return this.userModel.findOne(query);\n  }\n\n  getUsers(input: PaginateUserInput): Promise {\n    const { page, limit, search, ...rest } = input;\n\n    const query = {\n      ...(search && {\n        $or: [\n          { firstName: { $regex: search, $options: 'i' } },\n          { lastName: { $regex: search, $options: 'i' } },\n          { email: { $regex: search, $options: 'i' } },\n          { username: { $regex: search, $options: 'i' } },\n          { phone: { $regex: search, $options: 'i' } },\n        ],\n      }),\n      ...this.queryBuilder(rest),\n    };\n\n    return this.userModel.paginate(query, {\n      page: page || 1,\n      limit: limit || 10,\n    });\n  }\n\n  async updateUser(\n    id: Types.ObjectId,\n    update: Omit,\n  ): Promise {\n    if (update.password) {\n      update.password = await argon2.hash(update.password); // Hash the password before updating\n    }\n\n    return this.userModel.findByIdAndUpdate(id, update, { new: true });\n  }\n\n  async softDeleteUser(id: Types.ObjectId): Promise {\n    return this.userModel.findByIdAndUpdate(\n      id,\n      { status: 'DELETED' },\n      { new: true },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.resolver.ts\n            \n            class\n            AppResolver\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.input.ts\n            \n            class\n            LoginInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.input.ts\n            \n            class\n            LoginResponse\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth.input.ts\n            \n            class\n            RefreshTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/interfaces/jwt.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/jwt.interface.ts\n            \n            interface\n            Tokens\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/common/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/optional-auth.decorator.ts\n            \n            variable\n            OPTIONAL_AUTH_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/optional-auth.decorator.ts\n            \n            variable\n            OptionalAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/public.decorator.ts\n            \n            variable\n            Private\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/common/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/guards/gql-auth.guard.ts\n            \n            injectable\n            GqlAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/guards/graphq-throttler.guard.ts\n            \n            injectable\n            GqlThrottlerGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interfaces/mongoose.interface.ts\n            \n            interface\n            PaginateResult\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                        src/common/objecttypes/pagination.ts\n            \n            function\n            PaginatedType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                        src/common/objecttypes/pagination.ts\n            \n            type alias\n            Constructor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/user.input.ts\n            \n            class\n            GetUserInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/user.input.ts\n            \n            class\n            PaginatedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/user.input.ts\n            \n            class\n            PaginateUserInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/dtos/user.input.ts\n            \n            class\n            SoftDeleteUserInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dtos/user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                        src/user/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/user/schema/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/user.resolver.ts\n            \n            class\n            UserResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @apollo/server : ^4.12.2\n        \n            @nestjs/apollo : ^13.1.0\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/graphql : ^13.1.0\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/throttler : ^6.4.0\n        \n            argon2 : ^0.43.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            compression : ^1.8.0\n        \n            graphql : ^16.11.0\n        \n            helmet : ^8.1.0\n        \n            mongoose : ^8.16.3\n        \n            mongoose-paginate-v2 : ^1.9.1\n        \n            mongoose-unique-validator : ^4.0.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Gender   (src/.../user.schema.ts)\n                        \n                        \n                            UserStatus   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/user/schema/user.schema.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 BANNED\n                            \n                        \n                        \n                            \n                                Value : BANNED\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : DELETED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PaginatedType   (src/.../pagination.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/objecttypes/pagination.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaginatedType\n                        \n                    \n                \n            \n            \n                \nPaginatedType(TClass: Constructor)\n                \n            \n\n\n\n\n            \n                \n                        Factory to create a paginated result GraphQL type\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                TClass\n                                            \n                                                            Constructor\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Constructor   (src/.../pagination.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/objecttypes/pagination.ts\n    \n    \n        \n            \n                \n                    \n                    Constructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/user/schema/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CurrentUser   (src/.../current-user.decorator.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            OPTIONAL_AUTH_KEY   (src/.../optional-auth.decorator.ts)\n                        \n                        \n                            OptionalAuth   (src/.../optional-auth.decorator.ts)\n                        \n                        \n                            Private   (src/.../public.decorator.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, context: ExecutionContext) => {\n    const ctx = GqlExecutionContext.create(context);\n    const request = ctx.getContext().req;\n    return request?.user ?? null;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, false)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/optional-auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OPTIONAL_AUTH_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'optionalAuth'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OptionalAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(OPTIONAL_AUTH_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/user/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
